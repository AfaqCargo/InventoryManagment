# Generated by Django 4.2.20 on 2025-03-24 01:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColorInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=100)),
                ('color_density', models.CharField(max_length=100)),
                ('color_number', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_number', models.IntegerField()),
                ('row1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row1_columns', to='format_app.colorinfo')),
                ('row2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row2_columns', to='format_app.colorinfo')),
                ('row3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='row3_columns', to='format_app.colorinfo')),
                ('row4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='row4_columns', to='format_app.colorinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('employee_id', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('password', models.CharField(max_length=200)),
                ('date_hired', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('label_name', models.CharField(max_length=200)),
                ('machine', models.CharField(max_length=100)),
                ('density', models.CharField(max_length=50)),
                ('pick', models.IntegerField(choices=[(576, '576'), (864, '864'), (1152, '1152'), (1200, '1200')])),
                ('width', models.FloatField(help_text='Width in mm')),
                ('length', models.FloatField(help_text='Length in mm')),
                ('column_count', models.IntegerField(help_text='Number of columns (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('code', models.CharField(max_length=100, unique=True)),
                ('quantity', models.PositiveIntegerField()),
                ('preselect', models.CharField(blank=True, max_length=200, null=True)),
                ('fold_method', models.CharField(choices=[('cut_fold', 'Cut Fold'), ('cut_cut', 'Cut Cut'), ('center_fold', 'Center Fold'), ('hanger_fold', 'Hanger Fold'), ('roll', 'Roll')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('columns', models.ManyToManyField(related_name='items', to='format_app.column')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_items', to='format_app.employee')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='format_app.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
